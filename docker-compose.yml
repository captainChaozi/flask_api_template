version: '3.1'

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /data
    volumes:
      - "/data/${APP_FULL}:/data"
    ports:
      - "${PORT}03:5432"
    expose:
      - "5432"
    restart: always
    container_name: ${APP_FULL}_db
    networks:
      - app_network

  redis:
    image: redis:6
    restart: always
    expose:
      - "6379"
    ports:
      - "${PORT}04:6379"
    container_name: ${APP_FULL}_redis
    networks:
      - app_network
  api:
    build: .
    image: ${API_IMAGE_NAME}
    restart: always
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USER: ${DB_USER}
      REDIS_HOST: ${APP_FULL}_redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      LOG_LEVEL: debug
    expose:
      - 80
    ports:
      - "${PORT}01:80"
    container_name: ${APP_FULL}_api
    networks:
      - app_network
  celery:
    image: ${API_IMAGE_NAME}
    restart: always
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: 5432
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USER: ${DB_USER}
      REDIS_HOST: ${APP_FULL}_redis
      REDIS_PORT: 6379
      REDIS_DB: 0
      LOG_LEVEL: info
      RUN: celery
    container_name: ${APP_FULL}_celery
    networks:
      - app_network
  docs:
    image: redocly/redoc
    restart: always
    environment:
      SPEC_URL: "${DOCS_URI}"
    expose:
      - 80
    ports:
      - "${PORT}02:80"
    container_name: ${APP_FULL}_docs
    networks:
      - app_network
  nginx:
    image: chaozi/amis:debug
    build: ./amis
    restart: always
    expose:
      - 80
    ports:
      - "${PORT}00:80"
    container_name: ${APP_FULL}_nginx
    networks:
      - app_network

networks:
  app_network:
